{"version":3,"sources":["initialData.js","images/bread_up.png","images/cheese.png","images/burger.png","images/bread_down.png","task.jsx","column.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialData","tasks","id","content","columns","title","taskIds","columnOrder","Container","styled","div","props","isDragging","Task","task","index","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","className","src","alt","isDraggingOver","Column","column","droppableId","droppableProps","map","placeholder","App","useState","state","setState","onDragEnd","result","destination","source","newTaskIds","Array","from","splice","newColumn","newState","columnId","taskId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.385df77b.chunk.js","sourcesContent":["import bread_up from './images/bread_up.png';\r\nimport cheese from './images/cheese.png';\r\nimport burger from './images/burger.png';\r\nimport bread_down from './images/bread_down.png';\r\n\r\nconst initialData = {\r\n    tasks: {\r\n        'task-1': { id: 'task-1', content: bread_up },\r\n        'task-2': { id: 'task-2', content: cheese },\r\n        'task-3': { id: 'task-3', content: burger },\r\n        'task-4': { id: 'task-4', content: bread_down },\r\n    },\r\n    columns: {\r\n        'column-1': {\r\n            id: 'column-1',\r\n            title: 'Burger',\r\n            taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\r\n        },\r\n    },\r\n    columnOrder: ['column-1'],\r\n}\r\n\r\nexport default initialData;","export default __webpack_public_path__ + \"static/media/bread_up.2c21bf4e.png\";","export default __webpack_public_path__ + \"static/media/cheese.53cc5c29.png\";","export default __webpack_public_path__ + \"static/media/burger.f1f04f8e.png\";","export default __webpack_public_path__ + \"static/media/bread_down.09bd4fec.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n// import { ingredientsImages } from './images';\r\n\r\nconst Container = styled.div`\r\n    background-color: ${props => (props.isDragging ? 'lightgreen' : '')};\r\n    margin-bottom: -200px;\r\n`;\r\n\r\nconst Task = ({ task, index }) => {\r\n    return (\r\n        <Draggable draggableId={task.id} index={index}>\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <Container\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isDragging={snapshot.isDragging}\r\n                        className=\"border border-light mx-2 p-2\"\r\n                    >\r\n                        <img src={task.content} className=\"img-fluid\" alt=\"\" />\r\n                    </Container>\r\n                )\r\n            }}\r\n\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport Task from './task';\r\n\r\nconst Container = styled.div`\r\n    background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'white')};\r\n`;\r\n\r\n\r\nconst Column = ({ column, tasks }) => {\r\n    return (\r\n        <MDBContainer className=\"border border-dark mt-4 p-0\">\r\n            <h2>{column.title}</h2>\r\n            <Droppable droppableId={column.id}>\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <Container\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            isDraggingOver={snapshot.isDraggingOver}\r\n                        >\r\n                            {tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\r\n                            {provided.placeholder}\r\n                        </Container>\r\n                    )\r\n                }}\r\n            </Droppable>\r\n        </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default Column;","import './App.css';\nimport { useState } from 'react';\nimport initialData from './initialData';\nimport Column from './column';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nconst App = () => {\n  const [state, setState] = useState(initialData)\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const column = state.columns[source.droppableId];\n    const newTaskIds = Array.from(column.taskIds);\n    newTaskIds.splice(source.index, 1);\n    newTaskIds.splice(destination.index, 0, draggableId);\n\n    const newColumn = {\n      ...column,\n      taskIds: newTaskIds,\n    }\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newColumn.id]: newColumn\n      }\n    }\n\n    setState(newState);\n  }\n\n  return (\n    <DragDropContext\n      onDragEnd={onDragEnd}\n    >\n      {state.columnOrder.map(columnId => {\n        const column = state.columns[columnId];\n        const tasks = column.taskIds.map(taskId => state.tasks[taskId])\n\n        return <Column key={column.id} column={column} tasks={tasks} />;\n      })}\n    </DragDropContext>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}